from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.data_delivery_mechanism import DataDeliveryMechanism
from openapi_server.models.delivery_schema import DeliverySchema
from openapi_server.models.dme_type_id_struct import DmeTypeIdStruct
from openapi_server.models.metadata import Metadata
from openapi_server import util

from openapi_server.models.data_delivery_mechanism import DataDeliveryMechanism  # noqa: E501
from openapi_server.models.delivery_schema import DeliverySchema  # noqa: E501
from openapi_server.models.dme_type_id_struct import DmeTypeIdStruct  # noqa: E501
from openapi_server.models.metadata import Metadata  # noqa: E501

class DmeTypeDefinition(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, dme_type_id=None, metadata=None, data_production_schema=None, data_delivery_schemas=None, data_delivery_mechanisms=None):  # noqa: E501
        """DmeTypeDefinition - a model defined in OpenAPI

        :param dme_type_id: The dme_type_id of this DmeTypeDefinition.  # noqa: E501
        :type dme_type_id: DmeTypeIdStruct
        :param metadata: The metadata of this DmeTypeDefinition.  # noqa: E501
        :type metadata: Metadata
        :param data_production_schema: The data_production_schema of this DmeTypeDefinition.  # noqa: E501
        :type data_production_schema: object
        :param data_delivery_schemas: The data_delivery_schemas of this DmeTypeDefinition.  # noqa: E501
        :type data_delivery_schemas: List[DeliverySchema]
        :param data_delivery_mechanisms: The data_delivery_mechanisms of this DmeTypeDefinition.  # noqa: E501
        :type data_delivery_mechanisms: List[DataDeliveryMechanism]
        """
        self.openapi_types = {
            'dme_type_id': DmeTypeIdStruct,
            'metadata': Metadata,
            'data_production_schema': object,
            'data_delivery_schemas': List[DeliverySchema],
            'data_delivery_mechanisms': List[DataDeliveryMechanism]
        }

        self.attribute_map = {
            'dme_type_id': 'dmeTypeId',
            'metadata': 'metadata',
            'data_production_schema': 'dataProductionSchema',
            'data_delivery_schemas': 'dataDeliverySchemas',
            'data_delivery_mechanisms': 'dataDeliveryMechanisms'
        }

        self._dme_type_id = dme_type_id
        self._metadata = metadata
        self._data_production_schema = data_production_schema
        self._data_delivery_schemas = data_delivery_schemas
        self._data_delivery_mechanisms = data_delivery_mechanisms

    @classmethod
    def from_dict(cls, dikt) -> 'DmeTypeDefinition':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The DmeTypeDefinition of this DmeTypeDefinition.  # noqa: E501
        :rtype: DmeTypeDefinition
        """
        return util.deserialize_model(dikt, cls)

    @property
    def dme_type_id(self) -> DmeTypeIdStruct:
        """Gets the dme_type_id of this DmeTypeDefinition.


        :return: The dme_type_id of this DmeTypeDefinition.
        :rtype: DmeTypeIdStruct
        """
        return self._dme_type_id

    @dme_type_id.setter
    def dme_type_id(self, dme_type_id: DmeTypeIdStruct):
        """Sets the dme_type_id of this DmeTypeDefinition.


        :param dme_type_id: The dme_type_id of this DmeTypeDefinition.
        :type dme_type_id: DmeTypeIdStruct
        """

        self._dme_type_id = dme_type_id

    @property
    def metadata(self) -> Metadata:
        """Gets the metadata of this DmeTypeDefinition.


        :return: The metadata of this DmeTypeDefinition.
        :rtype: Metadata
        """
        return self._metadata

    @metadata.setter
    def metadata(self, metadata: Metadata):
        """Sets the metadata of this DmeTypeDefinition.


        :param metadata: The metadata of this DmeTypeDefinition.
        :type metadata: Metadata
        """

        self._metadata = metadata

    @property
    def data_production_schema(self) -> object:
        """Gets the data_production_schema of this DmeTypeDefinition.

        Schema that defines the information necessary to formulate a data request or data subscription.   If this attribute is not present, the schema is assumed to be known from the DME type definition that is referenced by dmeTypeId  # noqa: E501

        :return: The data_production_schema of this DmeTypeDefinition.
        :rtype: object
        """
        return self._data_production_schema

    @data_production_schema.setter
    def data_production_schema(self, data_production_schema: object):
        """Sets the data_production_schema of this DmeTypeDefinition.

        Schema that defines the information necessary to formulate a data request or data subscription.   If this attribute is not present, the schema is assumed to be known from the DME type definition that is referenced by dmeTypeId  # noqa: E501

        :param data_production_schema: The data_production_schema of this DmeTypeDefinition.
        :type data_production_schema: object
        """

        self._data_production_schema = data_production_schema

    @property
    def data_delivery_schemas(self) -> List[DeliverySchema]:
        """Gets the data_delivery_schemas of this DmeTypeDefinition.

        List of delivery schemas supported by the producer for the DME type being registered.  # noqa: E501

        :return: The data_delivery_schemas of this DmeTypeDefinition.
        :rtype: List[DeliverySchema]
        """
        return self._data_delivery_schemas

    @data_delivery_schemas.setter
    def data_delivery_schemas(self, data_delivery_schemas: List[DeliverySchema]):
        """Sets the data_delivery_schemas of this DmeTypeDefinition.

        List of delivery schemas supported by the producer for the DME type being registered.  # noqa: E501

        :param data_delivery_schemas: The data_delivery_schemas of this DmeTypeDefinition.
        :type data_delivery_schemas: List[DeliverySchema]
        """

        self._data_delivery_schemas = data_delivery_schemas

    @property
    def data_delivery_mechanisms(self) -> List[DataDeliveryMechanism]:
        """Gets the data_delivery_mechanisms of this DmeTypeDefinition.

        Defining the delivery mechanism supported by Data Producer   # noqa: E501

        :return: The data_delivery_mechanisms of this DmeTypeDefinition.
        :rtype: List[DataDeliveryMechanism]
        """
        return self._data_delivery_mechanisms

    @data_delivery_mechanisms.setter
    def data_delivery_mechanisms(self, data_delivery_mechanisms: List[DataDeliveryMechanism]):
        """Sets the data_delivery_mechanisms of this DmeTypeDefinition.

        Defining the delivery mechanism supported by Data Producer   # noqa: E501

        :param data_delivery_mechanisms: The data_delivery_mechanisms of this DmeTypeDefinition.
        :type data_delivery_mechanisms: List[DataDeliveryMechanism]
        """

        self._data_delivery_mechanisms = data_delivery_mechanisms
